@model Raisins.Client.Web.Core.ViewModels.PaymentViewModel
@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm(Model.Action, "Payments"))
{
    @Html.ValidationSummary(true)
    <br />
    <h1>NEW PAYMENT</h1>
    <br />
    //MODIFIED PART START
    <div class="js-create-payment-container" id="tabs">
        <ul role="tablist" class="">
            @if (Model.CanEdit)
            {
                <li aria-expanded="true" aria-selected="false"
                    aria-labelledby="ui-id-8" aria-controls="tabs-1"
                    tabindex="0" role="tab"
                    class="">
                    <a id="ui-id-8" tabindex="1" role="presentation" class="js-local js-payment-tab-button" href="#tabs-1">LOCAL</a>
                </li>
                <li aria-expanded="false" aria-selected="false"
                    aria-labelledby="ui-id-9" aria-controls="tabs-2"
                    tabindex="1" role="tab" class="">
                    <a id="ui-id-9" tabindex="2" role="presentation" class="js-external js-payment-tab-button" href="#tabs-1">EXTERNAL</a>
                </li>
            }
            @if (Model.CanLock) //Means that only Administrators can do External and Foreign payments encoding
            {

                <li aria-expanded="false" aria-selected="false"
                    aria-labelledby="ui-id-10" aria-controls="tabs-3"
                    tabindex="2" role="tab"
                    class="">
                    <a id="ui-id-10" tabindex="3" role="presentation" class="js-foreign js-payment-tab-button" href="#tabs-1">FOREIGN</a>
                </li>
            }
        </ul>
        <div style="display: block;" aria-hidden="false" role="tabpanel" class="" aria-labelledby="ui-id-8" id="tabs-1">
            <form id="Payments">
                <section id="1">
                    <div class="label">
                        <p>@Html.LabelFor(model => model.BeneficiaryId)*</p>
                    </div>
                    <div class="dropdown">
                        @Html.DropDownListFor(m => m.BeneficiaryId, new SelectList(Model.Beneficiaries, "ID", "Name"),"", new { @class = "dropdown-select" })
                    </div>
                    @Html.ValidationMessageFor(model => model.BeneficiaryId)
                    <br />
                    <br />
                    <div class="label">
                        <p>@Html.LabelFor(model => model.Name)*</p>
                    </div>
                    @Html.TextBoxFor(model => model.Name, null, new { @class = "tbox" })
                    @Html.ValidationMessageFor(model => model.Name)
                    <br />
                    <br />
                    <div class="label">
                        <p>@Html.LabelFor(model => model.Amount)*</p>
                    </div>
                    @Html.TextBoxFor(model => model.Amount, null, new { @class = "tbox" })
                    @Html.ValidationMessageFor(model => model.Amount)
                    <br/>
                    <br />
                    <div class="label">
                        <p>@Html.LabelFor(model => model.Email)*</p>
                    </div>
                    @Html.TextBoxFor(model => model.Email, null, new { @class = "tbox" })
                    @Html.ValidationMessageFor(model => model.Email)
                    <br/>
                    <br />
                    <div class="label">
                        <p>Currency</p>
                    </div>
                    <div class="dropdown">
                        @Html.DropDownListFor(m => m.CurrencyId, new SelectList(Model.Currencies, "ID", "CurrencyCode"), "", new { @class = "dropdown-select js-currency-dropdown" })
                    </div>
                    <br/>
                    <br/>
                    <div class="label">
                        <p>@Html.LabelFor(model => model.Location)</p>
                    </div>
                    @Html.TextBoxFor(model => model.Location, null, new { @class = "tbox" })
                    @Html.ValidationMessageFor(model => model.Location)
                    <br />
                    <br/>
                    <div title="You may leave this blank if there is none.">
                        <div class="label">
                            <p>@Html.LabelFor(model => model.SoldBy)</p>
                        </div>
                        @Html.TextBoxFor(model => model.SoldBy, null, new { @class = "tbox" })
                    </div>
                    <br />
                    <div class="label">
                        <p>@Html.LabelFor(model => model.Remarks)</p>
                        @Html.TextAreaFor(model => model.Remarks, new { @class = "tbox" })
                        @Html.ValidationMessageFor(model => model.Remarks)
                    </div>
                    @Html.DropDownListFor(m => m.PaymentClassId, Model.PaymentClasses, "", new { @class = "dropdown-select js-payment-class hide", data_originalValue = Model.PaymentClassId })
                    <br />
                    <br />
                    <input type="submit" class="btn" data-action="@Model.Action.ToUpper()" value="@Model.Action PAYMENT" id="submit" />
                </section>
            </form>
        </div>
    </div>

    <link href="~/Scripts/jun/css/jquery-ui.min.css" rel="stylesheet" type="text/css" />
    <link href="~/Scripts/jun/css/jquery-ui.structure.min.css" rel="stylesheet" type="text/css" />
    <link href="~/Scripts/jun/css/jquery-ui.theme.min.css" rel="stylesheet" type="text/css" />
    <link href="~/Scripts/jun/css/custom.css" rel="stylesheet" type="text/css" />

}
<br>
<div style="margin-left:-4%;">
    <a class="backtolist" href="@Url.Action("Index", "Payments","Views")">Back to List</a>
</div>

@section scripts {
    <script src="~/Scripts/jun/scripts/jquery-ui.min.js"></script>
    <script>
        $(document).ready(function () {
            PaymentController.init(".js-create-payment-container");
        });
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}

    


