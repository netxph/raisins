@model Raisins.Client.Web.Core.ViewModels.AccountViewModel
@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <br />
    <h1>NEW ACCOUNT</h1>
    <br />
    //MODIFIED PART START
    <div class="js-create-account-container">
        <form id="newAccount">
            <section id="1">
                <div class="label">
                    <p>@Html.LabelFor(model => model.Name)*</p>
                </div>
                @Html.TextBoxFor(model => model.Name, null, new { @class = "tbox" })
                @Html.ValidationMessageFor(model => model.Name)
                <br />
                <br />
                <div class="label">
                    <p>@Html.LabelFor(model => model.Username)*</p>
                </div>
                @Html.TextBoxFor(model => model.Username, null, new { @class = "tbox" })
                @Html.ValidationMessageFor(model => model.Username)
                <br />
                <br />
                <div class="label">
                    <p>@Html.LabelFor(model => model.Password)*</p>
                </div>
                @Html.TextBoxFor(model => model.Password, null, new { @class = "tbox" })
                @Html.ValidationMessageFor(model => model.Password)
                <br />
                <br />
                <div>
                    <div class="label">
                        <p>@Html.LabelFor(model => model.Role)*</p>
                    </div>
                    <div class="dropdown">
                        @Html.DropDownListFor(model => model.Role, new SelectList(Model.Roles, "ID", "Name"), "", new { @class = "dropdown-select js-role-dropdown" })
                    </div>
                    @Html.ValidationMessageFor(model => model.Role)
                </div>
                <br />
                <div class="js-beneficiary-dropdown">
                    <div class="label">
                        <p>@Html.LabelFor(model => model.Beneficiary)*</p>
                    </div>
                    <div class="dropdown">
                        @Html.DropDownListFor(model => model.Beneficiary, new SelectList(Model.Beneficiaries, "ID", "Name"), "", new { @class = "dropdown-select" })
                    </div>
                    @Html.ValidationMessageFor(model => model.Beneficiary)
                </div>
                <br />
                <div class="js-currency-dropdown">
                    <div class="label">
                        <p>@Html.LabelFor(model => model.Currency)</p>
                    </div>
                    <div class="dropdown">
                        @Html.DropDownListFor(model => model.Currency, new SelectList(Model.Currencies, "ID", "CurrencyCode"), "", new { @class = "dropdown-select" })
                    </div>
                    @Html.ValidationMessageFor(model => model.Currency)
                </div>
                <br />
                <br />
                <input type="submit" class="btn" value="Create Account" id="submit" />
            </section>
        </form>

    </div>
}
<br>
@section scripts {
    <script>
        $(document).ready(function () {
            AccountCreateController.init(".js-create-account-container");
        });
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}




